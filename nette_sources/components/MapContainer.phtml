<?php
/**
 * mycitizen.net - Social networking for civil society
 *
 *
 * @author http://mycitizen.org
 * @copyright  Copyright (c) 2013, 2014 Burma Center Prague (http://www.burma-center.org)
 * @link http://mycitizen.net
 * @license http://www.gnu.org/licenses/gpl-3.0.html GPL v3
 *
 * @package mycitizen.net
 */
 

/*
*	Displays the map for the filter
*/
?>
<script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=false&libraries=geometry"></script>
<script>
var map = null;
var mapcenter = new google.maps.LatLng({$default_latitude},{$default_longitude});

var mycenter = null;
function findme() {
	if(navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(onPositionUpdate,positionError);
	}

	function onPositionUpdate(position) {
		var lat = position.coords.latitude;
		var lng = position.coords.longitude;

			$('#own_location').show('normal');

			mycenter = new google.maps.LatLng(lat,lng);		
			map.setCenter(new google.maps.LatLng(lat,lng));
			var url = '/images/blue-pin.png';
			var icon = new google.maps.MarkerImage(url,
			// This marker is 20 pixels wide by 32 pixels tall.
			new google.maps.Size(25, 35),
			// The origin for this image is 0,0.
			new google.maps.Point(0,0),
			// The anchor for this image is the base of the flagpole at 0,32.
			new google.maps.Point(13, 30));

			new google.maps.Marker({
									  map:map,
									  icon:icon,
									  title:{_"My real position"},
									  position:new google.maps.LatLng(lat,lng)
										});
        }
        
        function positionError() {
//			alert("Error: No position"); 
        }
}


var points = [];

var circle = new google.maps.Circle();
var circle_center = null;
var circle_radius = null;

var firstclick = false;

function findLocation(address) {
   if(address != "") {
        var geocoder = new google.maps.Geocoder();
        geocoder.geocode( { 'address': address }, function(results, status) {
        	if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
        		alert('Too many requests.');
        		return false;
        	}
        
            if (status == google.maps.GeocoderStatus.OK) {
                mapcenter = results[0].geometry.location;
                map.setCenter(mapcenter);
            } else {
               alert({_"Address cannot be found."});
               $("[name='search']").val("");
        	}
        });
    }
}

function clearMap() {
   firstclick = false;
   if(circle_center != null) {
      circle_center.setMap(null);   
      circle_center = null;
   }
   if(circle_radius != null) {
      circle_radius = null;
   }
   for(var i = 0;i < points.length;i++) {
      points[i].setMap(null);
   }
   points = [];

	loadData();

}


var active_center = null;

function togglePosition() {
		if(active_center == null) {
			if(mycenter != null) {
            	map.setCenter(mycenter);
            	active_center = 0;
         	} else if(circle_center != null) {   
            	map.setCenter(circle_center.position);
            	active_center = 1;
         	}
    	}

		if(active_center > 0) {
			if(mycenter != null) {
				map.setCenter(mycenter);
				active_center = 0;
			}
		} else if(active_center == 0) { 
			if(circle_center != null) {	
				map.setCenter(circle_center.position);
				active_center = 1;
			}
		}
}

function updateZoneFormCircle(center,radius) {
	var json = '{"type":"circle",';

   if(center) {
      json += '"center":{"lat":"'+center.position.lat()+'","lng":"'+center.position.lng()+'"},';

   }
   if(radius) {
      json += '"radius":{"lat":"'+radius.position.lat()+'","lng":"'+radius.position.lng()+'","length":"'+google.maps.geometry.spherical.computeDistanceBetween(center.position,radius.position)+'"}';
   }
   json += '}';

   $("#mapcontainer").val(json);
}


function loadCircle(data) {
	if(data.radius != undefined && data.center != undefined) {
	circle_radius = new google.maps.Marker({
                                position: new google.maps.LatLng(data.radius.lat,data.radius.lng),
                                draggable:true,
                                map: map
                              });
   google.maps.event.addListener(circle_radius,'drag',function(event){
                circle.setRadius(google.maps.geometry.spherical.computeDistanceBetween(circle_center.position,event.latLng));
                updateZoneFormCircle(circle_center,circle_radius);
   });

   circle_center = new google.maps.Marker({
                                position: new google.maps.LatLng(parseFloat(data.center.lat),parseFloat(data.center.lng)),
                                draggable:true,
                                map: map
                              });
   map.setCenter(new google.maps.LatLng(parseFloat(data.center.lat),parseFloat(data.center.lng)));


	zoomToFit(parseFloat(data.center.lat),parseFloat(data.center.lng),parseFloat(data.radius.lat),parseFloat(data.radius.lng));
	
   google.maps.event.addListener(circle_center,'drag',function(event){
                     var proj = this.map.getProjection();
                     var point1 = proj.fromLatLngToPoint(circle.center);
                      circle.setCenter(event.latLng);
                     var point2 = proj.fromLatLngToPoint(event.latLng);
                     var newp = new google.maps.Point(point2.x - point1.x,point2.y - point1.y);
                     var oldradius = proj.fromLatLngToPoint(circle_radius.getPosition());
                     var newradius = new google.maps.Point(oldradius.x + newp.x,oldradius.y + newp.y);
                     circle_radius.setPosition(proj.fromPointToLatLng(newradius));
                     updateZoneFormCircle(circle_center,circle_radius);
            });
	circle.setOptions({
					strokeColor: "#3399FF",
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: "#99CCFF",
                	fillOpacity: 0.35,
                    map: map,
                    center: circle_center.position,
                    radius: google.maps.geometry.spherical.computeDistanceBetween(circle_center.position,circle_radius.position)
    });

	}
}

function loadData() {

   var mapOptions = {
      zoom: 8,
      center: mapcenter,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      streetViewControl: false,
      zoomControl:true,
      scrollwheel: false
   };

	map = new google.maps.Map(document.getElementById("map_canvas_container"),mapOptions);
	google.maps.event.addListener(map,'mousemove',function(event){
    if(firstclick) {
         circle_center.setOptions({ rad:1 });
         circle.setOptions({
					   strokeColor: "#3399FF",
                       strokeOpacity: 0.8,
                       strokeWeight: 2,
                       fillColor: "#99CCFF",
                       fillOpacity: 0.35,
                       map: map,
                       clickable:false,
                       center: circle_center.position,
                       radius: google.maps.geometry.spherical.computeDistanceBetween(circle_center.position,event.latLng)
                      });
		$('#item_location').show('normal');
      }
   });


	google.maps.event.addListener(map,'click',function(event) {

      if(!firstclick && !circle_center) {
         firstclick = true;
         circle_center =  new google.maps.Marker({
                     position:event.latLng,
                     draggable:true,
                     map:map,
                     rad:0
                  });
         google.maps.event.addListener(circle_center,'drag',function(event){
                if(circle_center.rad == 1) {
                var proj = this.map.getProjection();
                var point1 = proj.fromLatLngToPoint(circle.center);
                circle.setCenter(event.latLng);
                var point2 = proj.fromLatLngToPoint(event.latLng);
                var newp = new google.maps.Point(point2.x - point1.x,point2.y - point1.y);
                var oldradius = proj.fromLatLngToPoint(circle_radius.getPosition());
                var newradius = new google.maps.Point(oldradius.x + newp.x,oldradius.y + newp.y);
                circle_radius.setPosition(proj.fromPointToLatLng(newradius));
                } else {
                   circle.setCenter(event.latLng);
                }
				updateZoneFormCircle(circle_center,circle_radius);
         });

      } else if(firstclick) {
         firstclick = false;
         
         circle_radius = new google.maps.Marker({
            position:event.latLng,
            draggable:true,
            map:map
         }
         );
        circle_center.setOptions({ rad:1 });
        google.maps.event.addListener(circle_radius,'drag',function(event){
			circle.setRadius( google.maps.geometry.spherical.computeDistanceBetween( circle_center.position,event.latLng));
			updateZoneFormCircle(circle_center,circle_radius);
				});
      }

      if(circle_center && circle_radius) {
         circle.setOptions({
				strokeColor: "#3399FF",
                  strokeOpacity: 0.8,
                  strokeWeight: 2,
                  fillColor: "#99CCFF",
                  fillOpacity: 0.35,
                  map: map,
                  center: circle_center.position,
                  radius: google.maps.geometry.spherical.computeDistanceBetween(circle_center.position,circle_radius.position)
                 });

      }
		updateZoneFormCircle(circle_center,circle_radius);
   });

	if(mycenter != null) {
		var url = '/images/blue-pin.png';
		var icon = new google.maps.MarkerImage(url,
		// This marker is 20 pixels wide by 32 pixels tall.
		new google.maps.Size(25, 35),
		// The origin for this image is 0,0.
		new google.maps.Point(0,0),
		// The anchor for this image is the base of the flagpole at 0,32.
		new google.maps.Point(13, 30));

		new google.maps.Marker({
		  map:map,
		  icon:icon,
		  title:{_"My real position"},
		  position:mycenter
		});
    }

	if($("#mapcontainer").val() != "") {
		var data = $.parseJSON($("#mapcontainer").val());
		if(data != null) {
			loadCircle(data);
			$('#item_location').show('normal');
		}
	}
}

function zoomToFit(a,b,c,d) {
	var LatLngList = new Array (new google.maps.LatLng(a,b), new google.maps.LatLng(c,d));
	var bounds = new google.maps.LatLngBounds();
	for (var i = 0, LtLgLen = LatLngList.length; i < LtLgLen; i++) {
		bounds.extend(LatLngList[i]);
	}
	map.fitBounds(bounds);
	var zoom = map.getZoom();
	if ( zoom>0 ) {
		zoom--;
		map.setZoom(zoom);
	}
}

$(document).ready(function() {
  $(window).keydown(function(event){
    if( event.keyCode == 13) {
    	if ($('#search').val() != '') {
			findLocation($('#search').val());
    	  	event.preventDefault();
	      	return false;
	    } else {
	    	return true;
	    }
    }
  });
});
</script>

<input id="mapcontainer" name="{$name}[mapdata]" type="hidden" value='{if isset($defaults) && !is_array($defaults)}{$defaults}{/if}'>
<div class="map-div map-filter" style="width:250px;height:250px;">
	<div id="map_canvas_container" style="width:250px;height:250px;"></div>
</div>

<input id="search" type="text" value="" placeholder="{_"Search for a place"}"/>

<a href="javascript:void(0);" onClick="$('#mapcontainer').val('');clearMap(); $('#item_location').hide('normal');"><b class="icon-clear" title="{_"clear map"}"></b></a>

<table class="map-legend">
<tr id="own_location" onclick="map.setCenter(mycenter); active_center = 0;" style="display:none;cursor:pointer;">
	<td><img src="/images/blue-pin.png"/></td><td><span class="button">{_"My Location"}</span></td>
</tr>
<tr id="item_location" onclick="if(circle_center != null) { map.setCenter(circle_center.position);active_center = 1;}" style="display:none;cursor:pointer;">
	<td><img src="/images/red-pin.png"/></td><td><span class="button">{_"Selected Location"}</span></td>
</tr>
</table>