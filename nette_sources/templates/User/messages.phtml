<?php
/**
 * mycitizen.net - Social networking for civil society
 *
 *
 * @author http://mycitizen.org
 * @copyright  Copyright (c) 2013, 2014 Burma Center Prague (http://www.burma-center.org)
 * @link http://mycitizen.net
 * @license http://www.gnu.org/licenses/gpl-3.0.html GPL v3
 *
 * @package mycitizen.net
 */
?>
{block title}{_"Your messages"}{/block}
{block content}
<div class="wrapper-text">
	<div id="chat_top_anchor"></div>
	{ifset $nochat}
	<div class="user-detail-pm">
		<h3>{_"Private messaging has been disabled by the chat window. Reload page to re-enable"}</h3>
	</div>
	{else}

	{control messageform begin}
	<div class="about">
		<h1>{_"Send a message to a friend"}</h1>
		{ifset $nofriends}
		<p>{_"You have no friends yet. You can start sending messages only after someone has accepted your friendship request."}</p>
		{else}
		<div class="message-to">
			{$control['messageform']['friend_id']->control}
		</div>
		{/if}
	</div>
	<div class="detail-right">
		{ifset $nofriends}
		{else}
		<div class="message-text">
			<textarea placeholder="{_"Type your text here."}" id="message_text" name="message_text"></textarea>
		</div>
		<div class="message-send" style="padding: 20px 10px 30px;">
		 	<a href="javascript:void(0);" class="button" id="chat_submit" style="font-size:1.3em; margin:2em 0px;">{_"Send"}</a>
		</div>
		{/if}
	</div>
	{control messageform end}


	<div class="detail-right-bottom">
		<h2>{_"Your messages"}</h2>
		<div class="filter-block">
			<input type="text" class="text" name="name" id="search_name" value="{ifset $value}{$value}{/if}" placeholder="{_"Filter by name"}" title="{_"Show only messages by senders with matching names.<ul><li>Type to search only on this page.</li><li>Type and press enter to search on all pages.</li></ul>"}" autocomplete="off"/>
			<a href="javascript:void(0);" id="clear_button" class="button" name="clear" >{_"Clear"}</a>
		</div>
		<div class="reload-messages" style="float:right;">
			<a href="#settings_container" id="settings_box" title="{_"Notification Settings"}"><b class="icon-setting"></b></a>
		</div>

		<div id="settings_container" style="display:none;">
			<h2>{_"Notification Settings"}</h2>
			{control notificationsform}
		</div>
		<script type="text/javascript">
		$(function() {
			$("#settings_box").fancybox({
				minWidth : 400,
				minHeight : 200,
				closeBtn : true,
				helpers : {
					overlay : {
						css: {'background' : 'rgba(200, 200, 200, .5)'}
					},
					title : null
				},
			});
		});
		</script>
	
		<div class="reload-chat">
			<b id="reload_button" class="icon-reload" style="cursor:pointer;"  title="{_"Reload the chat."}"></b>
			<label for="auto_reload" title="{_"Automatically reload in regular intervals if something new has been posted."}">{_"auto reload"}</label><input id="auto_reload" type="checkbox" checked value="1"  title="{_"Automatically reload in regular intervals if something new has been posted."}" />
		</div>

		<div class="user-messages">

<script>
	var text = '';
	var search = '';
	var interval;
	var modifiedDate;
	var searchedOnServer = false;
	
	$(document).ready(function() {
		$("#search_name").keyup(function(event){
			if(event.keyCode == 13){
				// submit as search
				reloadChat();
				searchedOnServer = true;
			} else {
				// search on page only
				textChanged();
			}
		});
		
		$('#reload_button').click(function(){
		   reloadChat();
		});
		
		$('#clear_button').click(function(){
			$('#search_name').val('');
			if (searchedOnServer) {
				searchedOnServer = false;
				reloadChat();
			} else {
				showAll();
			}
		});
	});

	
	function textChanged() {
		search = $('#search_name').val();
		if (search == text) {
			return false;
		}
		search = search.trim();
		filter();
		text = search;
	}
	
	$.extend($.expr[":"], {
		"containsNC": function(elem, i, match, array) {
			return (elem.textContent || elem.innerText || "").toLowerCase().indexOf((match[3] || "").toLowerCase()) >= 0;
		}
	});

	function showAll() {
		$('.chat-author').parent().parent().parent().slideDown(600);
	}
	
	function filter() {
		if (search.length<text.length) {
			$('.chat-author').parent().parent().parent().slideDown(600);
			$('.chat-author:not(:containsNC('+search+'))').parent().parent().parent().slideUp(600);
		}
		else if (search!='') {
			$('.chat-author:not(:containsNC('+search+'))').parent().parent().parent().slideUp(600);
		}
	}

	$(document).ready(function() {
		interval = setInterval("chatTimer()",30*1000);
	});
	
	function chatTimer() {
		if ($("#auto_reload").prop("checked")) {
			reloadChatIfModified();
		} else {
			return false;
		}
	}

	function changePage(page) {
		$("#reload_button").attr("class", "icon-reload-disabled");
		$("#currentpage").val(page);
		reloadChat();
		$('html, body').animate({
			scrollTop: $("#message_list_anchor").offset().top
		}, 2000);
	}
	
	function reloadChat() {
		var currentpage = $("#currentpage").val();
		var name = $("#search_name").val();
		var trash = $("#trash").val();
		$("#reload_button").attr("class", "icon-reload-disabled");
		$.ajax({
			url:"{!$baseUri}widget/privatemessages/?page="+currentpage+"&owner="+name+"&trash="+trash,
			dataType:"html",
			ifModified:false,
			headers: {
					Pragma: "no-cache"
				},
			statusCode: {
				301: function(){
					$("#chat_container").html("Error loading chat.");
				}
			},
			success:function(payload,status,hdr){
				modifiedDate = hdr.getResponseHeader('Last-Modified');
				
				if (payload.indexOf('{"redirect":')>-1){
					$("#chat_container").html({_"Error loading chat. Are you logged in?"});
					return false;
				}

				$("#chat_container").animate({ opacity:0.7},function(){
					$("#chat_container").html(payload);
					$("#chat_container").animate({ opacity:1},function(){
						$("#reload_button").attr("class", "icon-reload");
					});
				});
				clearInterval(interval);
				interval = setInterval("chatTimer()",30*1000);
			},
		});
	}
	
	function reloadChatIfModified() {
		var currentpage=$("#currentpage").val();
		var name = $("#search_name").val();
		var trash = $("#trash").val();
		$.ajax({
			url:"{!$baseUri}widget/privatemessages/?page="+currentpage+"&owner="+name+"&trash="+trash,
			dataType:"html",
			ifModified:true,
			headers: {
					Pragma: "no-cache"
				},
			statusCode: {
				301: function(){
					$("#chat_container").html("Error loading chat.");
				}
			},
			success:function(payload,status,hdr){
				if(status=="notmodified"){
					return false;
				}
				
				// for cloudflare: check change of date
				var newModifiedDate = hdr.getResponseHeader('Last-Modified');
				if (modifiedDate == newModifiedDate) {
					return false;
				} else {
					modifiedDate = newModifiedDate;
				}
				
				if (payload.indexOf('{"redirect":')>-1){
					$("#chat_container").html({_"Error loading chat. Are you logged in?"});
					return false;
				}
				$("#reload_button").attr("class", "icon-reload-disabled");

				if (payload.indexOf('{"redirect":')>-1){
					$("#chat_container").replaceWith({_"Error loading chat. Are you logged in?"});
					return false;
				}


				$("#chat_container").animate({ opacity:0.7},function(){
					$("#chat_container").html(payload);
					$("#reload_button").attr("class", "icon-reload");
					$("#chat_container").animate({ opacity:1},200);
				});
				clearInterval(interval);
				interval = setInterval("chatTimer()",30*1000);
			},
		});
	}
	
{if !isset($nofriends)}
	$(document).ready(function() {
		CKEDITOR.replace( 'message_text', {
			height: '200px',
			width: '700px',
			filebrowserUploadUrl: '{!baseUri}?do=upload',
			filebrowserBrowseUrl: '{!baseUri}widget/browse/',
			allowedContent: 'h2 h3 h4 h5 strong em; hr; a[!href,target]; del ins s; ul ol li; img(left,right)[!src,alt,width,height]; blockquote[id]; p{ text-align}; span(marker){ color,background-color}; iframe[!src,width,height,frameborder,allowfullscreen]',
			toolbarGroups: [
				{ name: 'basicstyles', groups: [ 'basicstyles', 'cleanup' ] },
				{ name: 'paragraph', groups: [ 'list', 'indent', 'blocks', 'align', 'bidi' ]},
				{ name: 'links'},
				{ name: 'insert', groups: [ 'image', 'symbol', 'smiley']},
				{ name: 'styles'},
				{ name: 'colors'}
			]
		});
		
		$('#chat_submit').click(function(){
			var instance_name = 'message_text';
			var editorContent = CKEDITOR.instances[instance_name].getData();
			editorContent = $.trim(editorContent);
			if (editorContent == '' || editorContent == null) {
				alert({_'Please enter some text.'});
				return false;
			} else {
				CKEDITOR.instances[instance_name].updateElement();
				var serialized = $("#message_text").serialize();
				var recipient_id = $('#frmmessageform-friend_id option:selected').val();
				if (recipient_id == 0) {
					alert({_'Please select a recipient'});
					return false;
				}
				$.post('{!$baseUri}user/messages/?do=submitpmchat&recipient_id='+recipient_id, serialized, function(result) {
					CKEDITOR.instances[instance_name].setData('');
					reloadChatIfModified();
				}, "json");
			}
		});

	});
{/if}
	
	$(document).ready(function(){
		$(function(){
			document.body.onbeforeunload = function() {
				for(editorName in CKEDITOR.instances) {
					if (CKEDITOR.instances[editorName].checkDirty()) {
						return "Unsaved changes present!"
					}
				}
			}
		});
	});
</script>
<div id="message_list_anchor"></div>
<div id="chat_container">
	{_"Loading chat.."}
	{ifset $currentpage}
		<input type="hidden" id="currentpage" value="{$currentpage}" />
	{else}
		<input type="hidden" id="currentpage" value="1" />
	{/if}
	{ifset $trash}
		<input type="hidden" id="trash" value="{$trash}" />
	{else}
		<input type="hidden" id="trash" value="0" />
	{/if}

	<script>
		reloadChat();
	</script>

</div>
		</div>
{/if}
	</div>
	<input type="hidden" id="no_popup_chat" value="1" />
</div>
{/block}